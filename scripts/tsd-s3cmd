#!/bin/bash

_guide="\

    tsd-s3cmd
    ~~~~~~~~~

    Usage: tsd-s3cmd [OPTIONS]

    Getting started
    ~~~~~~~~~~~~~~~

    1. Create your .s3cfg file using your TSD project's access and secret key.
       You can find this in: /tsd/pXX/data/durable/s3-api-config

    2. Register your tsd-s3cmd with your TSD project:

        tsd-s3cmd --register

    3. Create a bucket:

        tsd-s3cmd mb s3://mybucket

    4. Upload data:

        tsd-s3cmd put data s3://mybucket

    5. For more help:

        tsd-s3cmd --help

"

collect_credentials() {
    read -p 'API environment - test or prod > ' ENV
    read -p 'User > ' USERNAME
    read -s -p 'Password > ' PASSWORD; echo
    read -p 'OTP > ' OTP
}

pnum_from_uname() {
    echo $1 | sed 's/p\(.*\)-\(.*\)/p\1/g'
}

do_tacl_auth() {
    if [[ $S3CMD_CMD == 'ls' ]]; then
        TOKEN_TYPE='export'
    else
        TOKEN_TYPE='import'
    fi
    JWT=$(tacl_auth --tsd_api_key --env $ENV --pnum $PNUM --user_name $USERNAME --password $PASSWORD --otp $OTP --token_type $TOKEN_TYPE)
}

do_authenticated_s3cmd() {
    collect_credentials
    PNUM=$(pnum_from_uname $USERNAME)
    do_tacl_auth
    s3cmd --add-header=token:$JWT --add-header=x-project-select:$PNUM $ARGS
    exit 0
}

ARGS="$*"
CMD=("$@")

S3CMD_CMD='other'
for i in ${CMD[*]}; do
    if [[ $i == 'ls' ]]; then
        S3CMD_CMD='ls'
    fi
done

if [[ $# -lt 1 ]]; then
    s3cmd
    exit 0
fi

if [[ $1 =~ '-h'|'--help' ]]; then
    s3cmd --help
    exit 0
elif [[ $1 == '--register' ]]; then
    tacl_admin --register_tsd_2fa
    exit 0
elif [[ $1 == '--guide' ]]; then
    printf "%s\n" "$_guide"
    exit 0
else
    do_authenticated_s3cmd
    exit 0
fi
