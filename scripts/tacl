#!/bin/bash

if [[ $# -lt 1 ]]; then
    echo ""
    echo "  Missing arguments, exiting"
    echo "  tacl --help for help"
    echo "  tacl --guide for a longer explanation"
    echo ""
    exit 1
fi

collect_credentials() {
    read -p 'User > ' USERNAME
    read -s -p 'Password > ' PASSWORD; echo
    read -p 'OTP > ' OTP
}

exec_client() {
    python /lib/python2.7/site-packages/tsdapiclient/client.py $@
}

exec_2fa_client() {
    python /lib/python2.7/site-packages/tsdapiclient/client.py
        --user_name $USERNAME --password $PASSWORD --otp $OTP $@
}

recipient='l.c.d.toit@usit.uio.no' # TODO get from config

file_post() {
    exec_2fa_client $@
}

make_symmetric_secret() {
    openssl rand -base64 10
}

encrypt_file_post() {
    PW=$(make_symmetric_secret)
    ENCPW=$(echo $PW | gpg -r $recipient --encrypt | openssl base64 -A)
    cat $1 |
    openssl enc -aes-256-cbc -a -pass file:<( echo $PW ) |
    exec_2fa_client --encryptedpw $ENCPW $@
}

archive_dir_post() {
    tar -cf - $1 | exec_2fa_client --encryptedpw $ENCPW $@
}

archive_compress_dir_post() {
    tar -cf - $1 | gzip -9 | exec_2fa_client --encryptedpw $ENCPW $@
}

archive_encrypt_dir_post() {
    PW=$(make_symmetric_secret)
    ENCPW=$(echo $PW | gpg -r $recipient --encrypt | openssl base64 -A)
    tar -cf - $1 |
    openssl enc -aes-256-cbc -a -pass file:<( echo $PW ) |
    exec_2fa_client --encryptedpw $ENCPW $@
}

archive_compress_encrypt_dir_post() {
    PW=$(make_symmetric_secret)
    ENCPW=$(echo $PW | gpg -r $recipient --encrypt | openssl base64 -A)
    tar -cf - $1 |
    gzip -9 |
    openssl enc -aes-256-cbc -a -pass file:<( echo $PW ) |
    exec_2fa_client --encryptedpw $ENCPW $@
}

import_data() {
    while [[ $# -gt 0 ]]; do
        case $1 in
            --pre)      shift; PRE=$1; shift ;;
            --post)     shift; POST=$1; shift ;;
            *)          shift ;;
        esac
    done
    if [[ $PRE == '' ]]; then
        echo 'POST without pre-processing'
        file_post $@
        exit 0
    elif [[ $PRE == 'encrypt' ]]; then
        echo 'POST with encryption'
        encrypt_file_post $@ --expr $POST
        exit 0
    elif [[ $PRE == 'archive' ]]; then
        echo 'POST with tar'
        archive_dir_post $@ --expr $POST
        exit 0
    elif [[ $PRE == *"archive"* ]] && [[ $PRE == *"compress"* ]] && [[ $PRE == *"encrypt"* ]]; then
        echo 'POST with tar, compress, and encrypt'
        archive_compress_dir_post $@ --expr $POST
        exit 0
    elif [[ $PRE == *"archive"* ]] && [[ $PRE == *"encrypt"* ]]; then
        echo 'POST with tar and encrypt'
        archive_encrypt_dir_post $@ --expr $POST
        exit 0
    elif [[ $PRE == *"archive"* ]] && [[ $PRE == *"compress"* ]]; then
        echo 'POST with tar and gzip'
        archive_compress_encrypt_dir_post $@ --expr $POST
        exit 0
    fi
}

if [[ $1 =~ ^('--help'|'--guide') ]]; then
    exec_client $1
    exit 0
fi

args=("$@")
for i in ${args[*]}; do
    if [[ $i =~ ^('--signup'|'--confirm'|'--getapikey'|'--delapikey'|'--pwreset') ]]; then
        exec_client $@
        exit 0
    elif [[ $i == '--import' ]]; then
        collect_credentials
        import_data $@
        exit 0
    fi
done
