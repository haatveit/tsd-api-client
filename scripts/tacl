#!/bin/bash

if [[ $# -lt 1 ]]; then
    echo "Missing arguments, exiting"
    echo "tacl --help for help"
    echo "tacl --guide for a longer explanation"
    exit 1
fi


collect_credentials() {
    read -p 'User > ' USERNAME
    read -s -p 'Password > ' PASSWORD; echo
    read -p 'OTP > ' OTP
}

exec_client() {
    python /lib/python2.7/site-packages/tsdapiclient/client.py $@
}

exec_2fa_client() {
    python /lib/python2.7/site-packages/tsdapiclient/client.py \
        --user_name $USERNAME --password $PASSWORD --otp $OTP $@
}

# TODO get from cmd line
recipient='l.c.d.toit@usit.uio.no'

file_post() {
    exec_2fa_client $@
}

encrypt_file_post() {
    PW=$(openssl rand -base64 10)
    ENCPW=$(echo $ENCPW | gpg -r $recipient --encrypt | openssl base64 -A)
    cat $1 |
    openssl enc -aes-256-cbc -a -pass file:<( echo $PW ) |
    exec_2fa_client --encryptedpw $ENCPW $@
}

archive_dir_post() {
    tar -cf - $1 | exec_2fa_client --encryptedpw $ENCPW $@
}

archive_compress_dir_post() {
    tar -cf - $1 | gzip -9 | exec_2fa_client --encryptedpw $ENCPW $@
}

archive_encrypt_dir_post() {
    PW=$(openssl rand -base64 10)
    ENCPW=$(echo $ENCPW | gpg -r $recipient --encrypt | openssl base64 -A)
    tar -cf - $1 |
    openssl enc -aes-256-cbc -a -pass file:<( echo $PW ) |
    exec_2fa_client --encryptedpw $ENCPW $@
}

archive_compress_encrypt_dir_post() {
    PW=$(openssl rand -base64 10)
    ENCPW=$(echo $ENCPW | gpg -r $recipient --encrypt | openssl base64 -A)
    tar -cf - $1 |
    gzip -9 |
    openssl enc -aes-256-cbc -a -pass file:<( echo $PW ) |
    exec_2fa_client --encryptedpw $ENCPW $@
}

# and the on the API: decode pw header, gpg decrypt it
# openssl enc -aes-256-cbc -a -d -pass file:<( echo $PW ) |
# tar -C t -xvf -

# TODO: do not require 2FA for API admin
# figure out custom header scheme

if [[ $1 =~ ^('--help'|'--guide') ]]; then
    exec_client $1
    exit 0
fi

echo $@


collect_credentials

